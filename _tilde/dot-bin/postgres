#!/usr/bin/env bash

# Script for managing local PostgreSQL clusters on Mac that allows to run multiple versions in parallel without port conflicts.
# It relies on [postgresql-common](https://github.com/petere/postgresql-common) tool for managing PostgreSQL clusters.
# PostgreSQL needs to also be installed from [peter's formulas](https://github.com/petere/homebrew-postgresql).
#
# Usage: `postgres [c]onsole | [i]nit | [u]p | [d]own | [s]tatus {version}` | setup

# Exit on error
set -e

# Different IPs for PostgreSQL version (127.0.0.10 for 10.x, 127.0.0.11 for 11.x, etc.)
HOSTS=("127.0.0.10" "127.0.0.11" "127.0.0.12" "127.0.0.13" "127.0.0.14" "127.0.0.15" "127.0.0.16" "127.0.0.17")

PLIST_CONTENT=$(cat <<EOF
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
    <key>Label</key>
    <string>com.user.lo0-IP_ADDRESS.plist</string>
    <key>RunAtLoad</key>
    <true/>
    <key>ProgramArguments</key>
    <array>
      <string>/sbin/ifconfig</string>
      <string>lo0</string>
      <string>alias</string>
      <string>IP_ADDRESS</string>
    </array>
</dict>
</plist>
EOF
)

postgres-setup() {
  echo "Postgres - installing postgresql-common"
  brew tap petere/postgresql
  brew install postgresql-common
}

postgres-console() {
  local version=$1
  local db=${2:-postgres}
  echo "Postgres - launching psql for ${version}/${db}"
  PGHOST=/tmp/${version} psql -d "${db}"
}

postgres-init() {
  local version=$1

  echo "Postgres - installing version: ${version}"
  brew install -q "petere/postgresql/postgresql@${version}"

  echo "Postgres - creating cluster for version: ${version}"
  local index=$((version - 10))
  local host=${HOSTS[$index]}
  pg_createcluster "${version}" main

  # Reset port to default
  sed -i '' "s/^port = [0-9]\{4\}/port = 5432/" "/opt/homebrew/etc/postgresql/${version}/main/postgresql.conf"
  # Assign lo0 alias as listen address and unix socket directory
  sed -i '' "s/^#listen_addresses = 'localhost'/listen_addresses = '${host}'/" "/opt/homebrew/etc/postgresql/${version}/main/postgresql.conf"
  # Set socket directory to /tmp/${version}
  sed -i '' "s|unix_socket_directories = '/tmp'|unix_socket_directories = '/tmp/${version}'|" "/opt/homebrew/etc/postgresql/${version}/main/postgresql.conf"
  # Set listen address to ${host}
  sed -i '' "s/127.0.0.1/${host}/" "/opt/homebrew/etc/postgresql/${version}/main/pg_hba.conf"

  echo "Postgres - creating alias for localhost interface (${host})"
  local file="/Library/LaunchDaemons/com.user.lo0-${host}.plist"

  if [ -f "${file}" ]; then
    sudo launchctl unload "${file}"
    sudo rm "${file}"
  fi

  echo "${PLIST_CONTENT//IP_ADDRESS/${host}}" | sudo tee "${file}" > /dev/null
  sudo chmod 644 "${file}"
  sudo chown root:wheel "${file}"
  sudo launchctl load "${file}"
}

postgres-up() {
  local version=$1
  echo "Postgres - starting cluster for version: ${version}"
  mkdir -p "$(brew --prefix)/etc/postgresql/${version}/main/conf.d"
  pg_ctlcluster "${version}" main start
}

postgres-down() {
  local version=$1
  echo "Postgres - stopping cluster for version: ${version}"
  pg_ctlcluster "${version}" main stop
}

postgres-remove() {
  local version=$1

  echo "Postgres - removing installation: ${version}"
  brew remove "postgresql@${version}"

  echo "Postgres - removing cluster for version: ${version}"
  rm -rf "/opt/homebrew/etc/postgresql/${version}"
}

postgres-status() {
  local version=$1
  local index=$((version - 10))
  local host=${HOSTS[$index]}

  echo -n "Postgres - status of cluster for version: ${version} (${host}): "
  pg_ctlcluster "${version}" main status | head -n 1 | sed "s/^pg_ctl: //"
}

postgres-help() {
  echo "Usage: postgres [c]onsole | [i] init | [u]p | [d]own | [s]tatus {version} | setup"
  exit 1
}

verify-version() {
  local version=$1
  if [ -z "${version}" ]; then
    echo "Postgres - version is required" >&2
    exit 1
  fi

  if ! [[ "${version}" =~ ^[0-9]+$ ]]; then
    echo "Postgres - version must be a number" >&2
    exit 1
  fi

  if [ "${version}" -lt 10 ] || [ "${version}" -gt 17 ]; then
    echo "Postgres - version must be between 10 and 17" >&2
    exit 1
  fi

  echo "${version}"
}

case $1 in
  "c" | "console") verify-version "$2" && postgres-console "$2" "${3:-postgres}";;
  "i" | "init") verify-version "$2" && postgres-init "$2";;
  "u" | "up") verify-version "$2" && postgres-up "$2";;
  "d" | "down") verify-version "$2" && postgres-down "$2";;
  "r" | "remove") verify-version "$2" && postgres-remove "$2";;
  "s" | "status") verify-version "$2" && postgres-status "$2";;
  "setup") postgres-setup;;
  *) postgres-help;;
esac
